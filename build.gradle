plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://jitpack.io" }
}

dependencies {
    // Spring Data JPA - 데이터베이스와의 상호작용을 위한 JPA 지원
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Security OAuth2 Client - OAuth2 클라이언트 기능 제공
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Spring Security - 보안 기능 제공
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Thymeleaf - Thymeleaf 템플릿 엔진 지원
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Spring Web - 웹 애플리케이션 개발을 위한 기본 기능 제공
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Web Services - 웹 서비스 기능 제공
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    // Thymeleaf Spring Security Extras - Thymeleaf 와 Spring Security 통합
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // Spring WebSocket - WebSocket 지원
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Lombok - 보일러플레이트 코드를 줄이기 위한 라이브러리
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring DevTools - 개발 편의 기능 제공
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // MySQL Connector - MySQL 데이터베이스 연결
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Spring Boot Test - 테스트 기능 제공
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring Security Test - 보안 관련 테스트 기능 제공
    testImplementation 'org.springframework.security:spring-security-test'

    // JUnit Platform Launcher - JUnit 플랫폼 런처
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // H2 Database - 테스트용 인메모리 데이터베이스
    testRuntimeOnly 'com.h2database:h2'

    // SpringDoc OpenAPI - OpenAPI 문서화 지원
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // SockJS Client - SockJS 클라이언트 라이브러리
    implementation 'org.webjars:sockjs-client:1.5.1'

    // STOMP WebSocket - STOMP WebSocket 라이브러리
    implementation 'org.webjars:stomp-websocket:2.3.3'
    
    // web sms service - 인증문자 메세지 기능 제공
    implementation 'net.nurigo:sdk:4.2.7'
    
    // chat gpt service - chat gpt service 제공
    runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'

    // Hospital Information service - 가장 유사한 내용 찾기 기능
    implementation 'org.apache.commons:commons-text:1.10.0'

    // MapStruct - 객체 간 매핑을 자동화하는 라이브러리
    // 컴파일 시점에 매핑 코드를 생성하여 높은 성능 제공
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    
    // MapStruct 어노테이션 프로세서
    // 컴파일 시점에 매퍼 구현체를 자동으로 생성
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    implementation 'com.google.firebase:firebase-admin:9.1.1'

    //jwt 토큰에 사용
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 파싱용 (필수)
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco/test/html')
    }
}

jar {
    enabled = false
}